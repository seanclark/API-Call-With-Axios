{"version":3,"sources":["FetchData.js","App.js","reportWebVitals.js","index.js"],"names":["FetchData","useState","post","setPost","id","setId","idFromButton","setIdFromButton","useEffect","axios","defaults","baseURL","get","then","res","console","log","data","catch","err","alert","handleClick","Container","maxWidth","Grid","container","spacing","item","xs","sm","TextField","autoComplete","name","variant","required","fullWidth","label","autoFocus","type","value","onChange","e","target","onKeyDown","key","Box","mt","Button","className","onClick","color","title","body","App","Fragment","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAiGeA,EAtFG,WACd,MAAuBC,mBAAS,IAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAmBF,mBAAS,IAA5B,mBAAMG,EAAN,KAAUC,EAAV,KACA,EAAuCJ,mBAAS,IAAhD,mBAAMK,EAAN,KAAoBC,EAApB,KAEAC,qBAAU,WACNC,IAAMC,SAASC,QAAU,uCACzBF,IAAMG,IAAN,iBAAoBN,IACvBO,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZX,EAAQW,EAAIG,SAEfC,OAAM,SAAAC,GACHC,MAAM,8BAER,CAACd,IAEH,IAAMe,EAAc,WAChBd,EAAgBH,IAapB,OACA,8BACI,eAACkB,EAAA,EAAD,CAAWC,SAAS,KAApB,UACC,6CAEG,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACA,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACC,EAAA,EAAD,CACAC,aAAa,MACbC,KAAK,QACLC,QAAQ,WACRC,UAAQ,EACRC,WAAS,EACT/B,GAAG,QACHgC,MAAM,cACNC,WAAS,EACTC,KAAO,OACPC,MAAUnC,EACVoC,SArBS,SAACC,GAClBpC,EAAMoC,EAAEC,OAAOH,QAqBPI,UA9BW,SAAAF,GACN,UAAVA,EAAEG,KACHvB,WAgCF,cAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIC,UAAY,cACZb,WAAS,EACTG,KAAO,SACPW,QAAW5B,EACXY,QAAQ,YACRiB,MAAM,UANV,yBAUA,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACC,EAAA,EAAD,CACIC,UAAY,cACZb,WAAS,EACTG,KAAO,SACPW,QA7CQ,SAACR,GACjBpC,EAAM,KA6CE4B,QAAQ,YACRiB,MAAM,UANV,qBAUA,gCACE,uCAAehD,EAAKiD,MACpB,sCAAcjD,EAAKkD,c,SC5ClBC,MAzCf,WACA,OACE,eAAC,IAAMC,SAAP,WACI,cAACC,EAAA,EAAD,IAEE,cAAC,EAAD,QCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1BZ,M","file":"static/js/main.913aa0f6.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\n\n\n\nconst FetchData = () => {\n    const[post, setPost] = useState({});\n    const[id, setId] = useState(\"\");\n    const[idFromButton, setIdFromButton] = useState(\"\");\n    \n    useEffect(() => {\n        axios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';\n        axios.get(`/posts/${idFromButton}`)\n    .then(res => {\n        console.log(res)\n        setPost(res.data)\n    })\n    .catch(err => {\n        alert(\"Enter a number: 1-100\")\n    })\n    },[idFromButton])\n    \n    const handleClick = () => {\n        setIdFromButton(id)\n    }\n    const handleKeyPress = e => {\n        if(e.key === 'Enter'){\n          handleClick();\n        }\n    }\n    const handleReset = (e) => { \n        setId(\"\");\n    }\n    const handleChange = (e) => {\n        setId(e.target.value); \n    }\n    return (  \n    <div>\n        <Container maxWidth=\"sm\">\n         <h1>POST SEARCH</h1>\n         \n            <Grid container spacing={2}>\n            <Grid item xs={10} sm={6}>\n                <TextField\n                autoComplete=\"off\"\n                name=\"enter\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"enter\"\n                label=\"Enter 1-100\"\n                autoFocus\n                type = \"text\" \n                value =  {id} \n                onChange = {handleChange} \n                onKeyDown = {handleKeyPress}\n              />\n            </Grid>\n        </Grid>\n        <Box mt={3}>\n            <Button\n                className = \"buttonstyle\" \n                fullWidth\n                type = \"submit\" \n                onClick = {handleClick}\n                variant=\"contained\" \n                color=\"primary\">    \n                Find Post\n            </Button>\n            </Box>\n            <Box mt={3}>\n            <Button \n                className = \"buttonstyle\"\n                fullWidth \n                type = \"submit\" \n                onClick = {handleReset}\n                variant=\"contained\" \n                color=\"default\">    \n                Reset\n            </Button>\n            </Box>\n            <div>\n              <h2>Title</h2>{post.title} \n              <h2>Post</h2>{post.body}\n            </div>\n            \n            </Container>\n        </div>\n    )\n}\n\nexport default FetchData;\n","import React from 'react';\nimport FetchData from './FetchData';\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nfunction App() {\nreturn (\n  <React.Fragment>\n      <CssBaseline />\n      {\n        <FetchData />\n      }\n    </React.Fragment>\n   )\n  } \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  /*axios.defaults.baseURL = \"https://reqres.in/api\";\n  const getData = ()=> {\n  axios.get(\"/users\")\n  .then(res => console.log(res.data.data));\n  }\n  const postData = () => {\n  axios.post(\"/users\")\n  .then((res) => console.log(res))\n  .catch((res) => console.log(res));\n  } \n\n  return (\n    <div className=\"App\">\n      <h1>User Directory</h1>\n      <button onClick = {getData}>Get User Records</button>\n      <button onClick = {postData}>Post New Record</button>\n       </div>\n  )\n  }*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}